
document.addEventListener('DOMContentLoaded', function () {
    chrome.storage.sync.get(["contrast_service_key", "teamserver_url", "contrast_org_uuid"], function (items) {

        if (items["contrast_service_key"] != null) {

            chrome.tabs.query({ 'active': true, 'lastFocusedWindow': true }, function (tabs) {
                var url = tabs[0].url;

                getOrganizationVulnerabilityesIds(url, function () {
                    return function (e) {
                        var xhr = e.currentTarget;
                        if (xhr.readyState == 4) {
                            if (xhr.responseText != "") {
                                const json = JSON.parse(xhr.responseText);
                                var traces = json["traces"];
                                if (traces.length > 0) {
                                    $("#vulnerabilities-on-page").show();
                                    populateVulnerabilitySection(traces, items["teamserver_url"], items["contrast_org_uuid"]);
                                }
                            }
                        }
                    }
                });
            });
        }
    });
}, false);

function populateVulnerabilitySection(traces, teamserverUrl, orgUuid) {
    if (traces.length > 0) {
        for (i = 0; i < traces.length; i++) {
            getVulnerabilityShort(traces[i], function () {
                return function (e) {
                    var xhr = e.currentTarget;
                    if (xhr.readyState == 4) {
                        if (xhr.responseText != "") {
                            const json = JSON.parse(xhr.responseText);
                            var trace = json["trace"];

                            var li = $('<li/>')
                                .addClass('list-group-item')
                                .appendTo($("#vulnerabilities-found-on-page-list"));

                            li.append($('<a/>').attr("href", "").addClass('vulnerability-rule-name').append(trace["ruleName"]).click(function (event) {
                                var text = $(event.target).parent().find('.vulnerability-uuid').text();
                                text = text.substring("UUID: ".length, text.length);
                                var completeUrl = getVulnerabilityTeamserverUrl(teamserverUrl, orgUuid, text);
                                chrome.tabs.create({ url: completeUrl });
                            }));

                            li.append($('<h6/>').append("Severity: " + trace["severity"]));
                            li.append($('<h6/>').append("Status: " + trace["status"]));
                            li.append($('<h6/>').append("App id: " + trace["app_id"]));
                            li.append($('<h6/>').addClass('vulnerability-uuid').append("UUID: " + trace["uuid"]));

                            var date = new Date(null);
                            date.setMilliseconds(trace["first_time_seen"]);
                            var dateVal = date.toString();

                            li.append($('<h6/>').append(dateVal));
                        }
                    }
                }
            });
        }
    }
}
