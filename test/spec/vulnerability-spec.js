const chrome = require('sinon-chrome/extensions');
import { it, expect } from "jasmine"

describe('test how vulnerabilities are rendered to user', () => {

  const container = document.createElement('div')
  document.children[0].appendChild(container)
  container.setAttribute('id', 'vulnerabilities-found-on-page-list')
  container.style.display = 'none'

  before(() => {
    global.chrome = chrome;

    if (!!container.children[0]) {
      container.children[0].parentNode.removeChild(container.children[0])
    }
  })

  after(() => {
    if (!!container.children[0]) {
      container.children[0].parentNode.removeChild(container.children[0])
    }
  })

  it('renders a number of vulnerabilities equal to the number of traces provided', () => {
    expect(container.children.length).toEqual(0)

    renderListItem(returnShortTraceData, "teamserverURL", "org uuid")
    expect(container.children.length).toEqual(1)
  })

  it('orders the rendered vulnerabilities by severity', () => {
    const traces = [returnShortTraceDataLowSeverity, returnShortTraceData]

    expect(container.children[0]).not.toBeDefined()

    traces.forEach(trace => renderListItem(trace, "teamserverURL", "org-uuid"))

    expect(container.children.length).toEqual(2)

    for (let i = 0; i < container.children.length; i++) {
      let child = container.children[i]
      let imageSrc = child.getElementsByTagName('img')[0].src
      if (i === 0) {
        expect(imageSrc.includes("critical")).toBe(true)
      } else {
        expect(imageSrc.includes("low")).toBe(true)
      }
    }
  })
})
