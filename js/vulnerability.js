/*global
chrome,
document,
*/

import { getStorageVulnsAndRender } from './vulnerabilityMethods.js';
import {
  STORED_APPS_KEY,
  getStoredCredentials,
  isCredentialed,
  getHostFromUrl,
} from './util.js'

document.addEventListener('DOMContentLoaded', () => {
  chrome.storage.local.get(STORED_APPS_KEY, (result) => {
    chrome.tabs.query({ active: true, lastFocusedWindow: true }, (tabs) => {
      if (!tabs[0]) return;

      const url  = new URL(tabs[0].url);
      const host = getHostFromUrl(url);

      if (!!result[STORED_APPS_KEY] && result[STORED_APPS_KEY].filter(app => app[host])[0]) {
        getStoredCredentials()
        .then(items => {
          if (isCredentialed(items)) {
            getStorageVulnsAndRender(items);
          } else {
            throw new Error("Not Credentialed")
          }
        })
        .catch(error => new Error(error));
      }
    });
  });
}, false);
