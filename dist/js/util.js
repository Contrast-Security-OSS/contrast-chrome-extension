export const CONTRAST_USERNAME="contrast_username";export const CONTRAST_SERVICE_KEY="contrast_service_key";export const CONTRAST_API_KEY="contrast_api_key";export const CONTRAST_ORG_UUID="contrast_org_uuid";export const TEAMSERVER_URL="teamserver_url";export const SEVERITY_NOTE="Note";export const SEVERITY_LOW="Low";export const SEVERITY_MEDIUM="Medium";export const SEVERITY_HIGH="High";export const SEVERITY_CRITICAL="Critical";export const SEVERITY={Note:0,Low:1,Medium:2,High:3,Critical:4};export const SEVERITY_BACKGROUND_COLORS={Note:"rgb(238, 238, 238)",Low:"rgb(220, 220, 220)",Medium:"rgb(247, 182, 0)",High:"rgb(247, 138, 49)",Critical:"rgb(230, 48, 37)"};export const SEVERITY_TEXT_COLORS={Note:"rgb(102, 102, 102)",Low:"rgb(41, 41, 41)",Medium:"white",High:"white",Critical:"white"};export const TEAMSERVER_BASE="/Contrast/static/ng";export const TEAMSERVER_INDEX_PATH_SUFFIX="/Contrast/static/ng/index.html#/";export const TEAMSERVER_ACCOUNT_PATH_SUFFIX="/account";export const TEAMSERVER_PROFILE_PATH_SUFFIX="/account/profile";export const TEAMSERVER_API_PATH_SUFFIX="/Contrast/api";export const VALID_TEAMSERVER_HOSTNAMES=["app.contrastsecurity.com","apptwo.contrastsecurity.com","eval.contratsecurity.com","alpha.contrastsecurity.com","localhost"];export const CONTRAST_GREEN="#65C0B2";export const CONTRAST_RED="#E63025";export const CONTRAST_YELLOW="#FFD300";export const CONTRAST_CONFIGURE_TEXT="*";export const LISTENING_ON_DOMAIN=["<all_urls>"];export const GATHER_FORMS_ACTION="contrast__gatherForms";export const GATHER_SCRIPTS="contrast__gather_scripts";export const STORED_TRACES_KEY="contrast__traces";export const TRACES_REQUEST="contrast__getStoredTraces";export const STORED_APPS_KEY="contrast__APPS";export const LOADING_DONE="contrast__LOADING_DONE_requests";export const HIGHLIGHT_VULNERABLE_FORMS="contrast__highlight_vuln_forms";export const APPLICATION_CONNECTED="contrast__application__connected";export const APPLICATION_DISCONNECTED="contrast__application__disconnected";export const CONNECTED_APP_DOMAINS="contrast__connected_app_domains";export const CONTRAST_INITIALIZE="contrast__initialize_user";export const CONTRAST_INITIALIZED="contrast__user_initialized";export const CONTRAST__STORED_APP_LIBS="contrast__stored_libraries";export const CONTRAST_WAPPALIZE="contrast__wappalzye";const BLACKLISTED_DOMAINS=["chrome://","file://","/Contrast/api/ng/","/Contrast/s/","/Contrast/static/ng","google.com","ajax.googleapis.com","gstatic.net","cloudfront.com","developer.chrome","facebook.com","atlassian.net","cloudfront.net","cloudfront.com","cdn.sstatic.net","reddit.com","sockjs-node/info","socket.io"],BLACKLIST_LENGTH=BLACKLISTED_DOMAINS.length;Array.prototype.flatten=function(){return this.reduce((t,e)=>t.concat(e),[])},String.prototype.titleize=function(){return this.replace(/\b([a-z])/g,function(t){return t.charAt(0).toUpperCase()+t.substr(1).toLowerCase()})};export const capitalize=t=>t[0].toUpperCase()+t.substr(1);function fetchTeamserver(t,e,r,n,o="GET"){const i="GET"===o?t+e:t,s={method:o,headers:new Headers({Authorization:r,"API-Key":n,Accept:"application/json"})};return"GET"!==o&&(s.body=JSON.stringify(e),s.headers.append("Content-Type","application/json")),fetch(i,s).then(t=>{if(200===t.status&&t.ok)return t.json();throw new Error(t)}).catch(t=>new Error(t))}function getAuthorizationHeader(t,e){return btoa(t+":"+e)}function getOrganizationVulnerabilitiesIdsUrl(t,e,r){if(t&&e&&r)return t+"/ng/"+e+"/traces/"+r+"/ids";if(t&&e)return t+"/ng/"+e+"/orgtraces/ids";throw new Error("an argument to getOrganizationVulnerabilitiesIdsUrl was undefined")}function getVulnerabilityShortUrl(t,e,r,n){if(t&&e&&r)return t+"/ng/"+e+"/traces/"+n+"/trace/"+r;throw new Error("an argument to getVulnerabilityShortUrl was undefined")}function getApplicationsUrl(t,e){if(t&&e)return t+"/ng/"+e+"/applications/name";throw new Error("an argument to getApplicationsUrl was undefined")}function getVulnerabilityTeamserverUrl(t,e,r){if(t&&e&&r){let n=t;return t.endsWith("/api")&&(n=t.substring(0,t.indexOf("/api"))),n+"/static/ng/index.html#/"+e+"/vulns/"+r+"/overview"}throw new Error("argument to getVulnerabilityTeamserverUrl was undefined")}function getStoredCredentials(){return new Promise((t,e)=>{chrome.storage.local.get([CONTRAST_USERNAME,CONTRAST_SERVICE_KEY,CONTRAST_API_KEY,CONTRAST_ORG_UUID,TEAMSERVER_URL],r=>{r?t(r):e(new Error("Error getting credentials"))})})}function getOrganizationVulnerabilityIds(t,e){return getStoredCredentials().then(r=>{if(!r)throw new Error("Error retrieving credentials from storage");const n=getOrganizationVulnerabilitiesIdsUrl(r[TEAMSERVER_URL],r[CONTRAST_ORG_UUID],e),o=getAuthorizationHeader(r[CONTRAST_USERNAME],r[CONTRAST_SERVICE_KEY]);return fetchTeamserver(n,"?urls="+t,o,r[CONTRAST_API_KEY])})}function getVulnerabilityShort(t,e){return getStoredCredentials().then(r=>{return fetchTeamserver(getVulnerabilityShortUrl(r[TEAMSERVER_URL],r[CONTRAST_ORG_UUID],t,e),"",getAuthorizationHeader(r[CONTRAST_USERNAME],r[CONTRAST_SERVICE_KEY]),r[CONTRAST_API_KEY])})}function getOrgApplications(){return getStoredCredentials().then(t=>{return fetchTeamserver(getApplicationsUrl(t[TEAMSERVER_URL],t[CONTRAST_ORG_UUID]),"",getAuthorizationHeader(t[CONTRAST_USERNAME],t[CONTRAST_SERVICE_KEY]),t[CONTRAST_API_KEY])})}function isCredentialed(t){const e=Object.values(t);return e&&e.length>0&&e.every(Boolean)}function deDupeArray(t){return t.filter((t,e,r)=>r.indexOf(t)===e)}function isEmptyObject(t){for(let e in t)return!1;return!0}function getHostFromUrl(t){const e=t.host.replace(":","_"),r=e.split(".");return r.length<3?r[0]:3===r.length?r[1]:e}function isBlacklisted(t){if("string"!=typeof t)throw new Error("url must be a string");if(!t)return!0;t=t.toLowerCase();for(let e=0;e<BLACKLIST_LENGTH;e++)if(t.includes(BLACKLISTED_DOMAINS[e].toLowerCase()))return!0;return!1}function isHTTP(t){return t.includes("http://")||t.includes("https://")}function isContrastTeamserver(t){if("string"!=typeof t)throw new Error("url must be a string");if(!t)return!1;return["/Contrast/api/ng/","/Contrast/s/","/Contrast/static/ng/index"].some(e=>t.includes(e))}function updateTabBadge(t,e="",r=CONTRAST_GREEN){if(t){chrome.runtime.lastError;try{chrome.tabs.get(t.id,n=>{if(chrome.runtime.lastError,n)try{chrome.runtime.lastError,chrome.browserAction.getBadgeText({tabId:t.id},n=>{(""===n||n)&&(chrome.runtime.lastError,t.id>=0&&!chrome.runtime.lastError&&("transparent"===r&&(r=[0,0,0]),chrome.browserAction.setBadgeBackgroundColor({color:r}),chrome.browserAction.setBadgeText({tabId:t.id,text:e})))})}catch(t){throw new Error("Error updating badge0",t)}})}catch(t){throw new Error("Error updating badge1",t)}}}const CONTRAST_ICONS={0:"contrast-on.png",1:"contrast-off.png",2:"contrast-not-configured.png"};function updateExtensionIcon(t,e=0){const r={tabId:t.id,path:"/img/"+("number"==typeof e?CONTRAST_ICONS[e]:e)};if(!r.path)throw new Error("update extension icon path is not set",r);chrome.browserAction.setIcon(r)}function removeLoadingBadge(t){t&&chrome.browserAction.getBadgeText({tabId:t.id},e=>{"↻"===e&&chrome.browserAction.getBadgeBackgroundColor({tabId:t.id},e=>{updateTabBadge(t,"",e||CONTRAST_GREEN)})})}function generateTraceURLString(t){if(!t||0===t.length)return"";let e=!1;const r=t.map(t=>(!e&&hasIDorUUID(t)&&(e=!0),btoa(t)));return e?r.join(",")+`&matchRoutePathParams=${e}`:r.join(",")}export const UUID_V4_REGEX=new RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i);const PATH_ID_REGEX=new RegExp(/\/(\d+)/);function hasIDorUUID(t){let e;return e=t.includes("http://")||t.includes("https://")?new URL(t).pathname:t,PATH_ID_REGEX.test(e)||UUID_V4_REGEX.test(e)}function processTeamserverUrl(t){if(t.length>0){for(;t.endsWith("/");)t=t.slice(0,-1);t.endsWith("/api")||(t.endsWith("/Contrast")||(t+="/Contrast"),t+="/api"),t.startsWith("http")||(t="https://"+t)}return t}function setElementDisplay(t,e){if(!t||!e)throw new Error("Either no element or display received when setting display");try{t.style.display=e}catch(t){throw new Error(t)}}function setElementText(t,e){if(!t)throw new Error("No element received");if("string"!=typeof e)throw new Error("Text must be a string, received "+typeof e);try{t.innerText=e}catch(t){throw new Error(t)}}function changeElementVisibility(t){Array.prototype.slice.call(t.classList).includes("visible")?(t.classList.remove("visible"),t.classList.add("hidden")):(t.classList.add("visible"),t.classList.remove("hidden"))}function hideElementAfterTimeout(t,e=(()=>null),r=2e3){setTimeout(()=>(changeElementVisibility(t),e()),r)}function loadingBadge(t){updateTabBadge(t,"↻",CONTRAST_GREEN)}function murmur(t){return murmurHash3.x86.hash128(t)}export{fetchTeamserver,getAuthorizationHeader,getOrganizationVulnerabilitiesIdsUrl,getVulnerabilityShortUrl,getApplicationsUrl,getVulnerabilityTeamserverUrl,getStoredCredentials,getOrganizationVulnerabilityIds,getVulnerabilityShort,getOrgApplications,isCredentialed,deDupeArray,getHostFromUrl,isBlacklisted,isContrastTeamserver,updateTabBadge,removeLoadingBadge,generateTraceURLString,hasIDorUUID,processTeamserverUrl,setElementDisplay,setElementText,changeElementVisibility,hideElementAfterTimeout,loadingBadge,isHTTP,isEmptyObject,murmur,updateExtensionIcon};