import{STORED_APPS_KEY,setElementDisplay}from"../util.js";import Application from"./Application.js";export default function ConnectedDomain(o,t){this.host=o,this.application=t}ConnectedDomain.prototype.connectDomain=function(){return this._addDomainToStorage()},ConnectedDomain.prototype._addDomainToStorage=function(){const{host:o,application:t}=this;return new Promise((e,r)=>{chrome.storage.local.get(STORED_APPS_KEY,n=>{if(chrome.storage.lastError)return r(new Error("Error retrieving stored apps"));n[STORED_APPS_KEY]||(n[STORED_APPS_KEY]=[]);const i=this._verifyDomainNotInUse(n[STORED_APPS_KEY],o);if(i.constructor===Error)return r(i);const a=new Application(o,t),c=n[STORED_APPS_KEY].concat(a),s=document.getElementById("application-table");chrome.storage.local.set({[STORED_APPS_KEY]:c},()=>{setElementDisplay(s,"none"),e(!chrome.storage.lastError)})})})},ConnectedDomain.prototype._verifyDomainNotInUse=function(o,t){if(o.length>0)for(let e=0,r=o.length;e<r;e++){let r=o[e];if(r.domain===t)return new Error(`The Domain ${Application._subColonOrUnderscore(t)} is already in use by another application: ${r.name}. Please either first disconnect ${r.name} or run this application on a different domain/port.`)}return!0},ConnectedDomain.prototype.disconnectDomain=function(){return this._removeDomainFromStorage()},ConnectedDomain.prototype._removeDomainFromStorage=function(){return new Promise((o,t)=>{chrome.storage.local.get(STORED_APPS_KEY,e=>{const r=this._filterOutApp(e);chrome.storage.local.set({[STORED_APPS_KEY]:r},()=>{chrome.runtime.lastError&&t(new Error(chrome.runtime.lastError)),o(!chrome.runtime.lastError)})})})},ConnectedDomain.prototype._filterOutApp=function(o){return o[STORED_APPS_KEY].filter(o=>o.id!==this.application.id)};