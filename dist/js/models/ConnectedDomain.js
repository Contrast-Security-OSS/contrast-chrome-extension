import{STORED_APPS_KEY,setElementDisplay}from"../util.js";import Application from"./Application.js";export default function ConnectedDomain(o,t){this.host=o,this.application=t}ConnectedDomain.prototype.connectDomain=function(){return this._addDomainToStorage()},ConnectedDomain.prototype._addDomainToStorage=function(){const{host:o,application:t}=this;return new Promise((e,r)=>{chrome.storage.local.get(STORED_APPS_KEY,n=>{chrome.storage.lastError&&r(new Error("Error retrieving stored apps")),n[STORED_APPS_KEY]||(n[STORED_APPS_KEY]=[]);const i=new Application(o,t),a=n[STORED_APPS_KEY].concat(i),c=document.getElementById("application-table");chrome.storage.local.set({[STORED_APPS_KEY]:a},()=>{setElementDisplay(c,"none"),e(!chrome.storage.lastError)})})})},ConnectedDomain.prototype.disconnectDomain=function(){return this._removeDomainFromStorage()},ConnectedDomain.prototype._removeDomainFromStorage=function(){return new Promise((o,t)=>{chrome.storage.local.get(STORED_APPS_KEY,e=>{const r=this._filterOutApp(e);chrome.storage.local.set({[STORED_APPS_KEY]:r},()=>{chrome.runtime.lastError&&t(new Error(chrome.runtime.lastError)),o(!chrome.runtime.lastError)})})})},ConnectedDomain.prototype._filterOutApp=function(o){return o[STORED_APPS_KEY].filter(o=>o.id!==this.application.id)};