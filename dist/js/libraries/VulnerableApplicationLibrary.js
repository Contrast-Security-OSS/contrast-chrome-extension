class VulnerableApplicationLibrary{constructor(e){this.name=e.name||e.parsedLibName,this.vulnerabilities=e.vulnerabilities,this.vulnerabilitiesCount=e.vulnerabilities.length,this.version=e.version}lowConfidenceVulnerabilities(){return{name:this.name,confidenceIsCorrectLibrary:"LOW",vulnerabilitiesCount:this.vulnerabilitiesCount,vulnerabilities:this.vulnerabilities.map(e=>{let i={};return e.atOrAbove&&(i.atOrAbove=e.atOrAbove),e.atOrBelow&&(i.atOrBelow=e.atOrBelow),e.above&&(i.above=e.above),e.below&&(i.below=e.below),{title:e.identifiers.summary,link:e.info[0],severity:e.severity,versions:i}})}}highConfidenceVulnerability(){let e=this._isCorrectVersion(this.vulnerabilities,this.version);return e?{name:this.name,severity:e.severity,title:e.identifiers.summary,link:e.info[0],confidenceIsCorrectLibrary:"HIGH",vulnerabilities:this.vulnerabilities,vulnerabilitiesCount:this.vulnerabilitiesCount}:e}_isCorrectVersion(e,i){if(!e||!i)return!1;for(let r=0,t=e.length;r<t;r++){let t=e[r],{below:n,atOrAbove:s,above:l}=t;if(n&&(n=this._parseVersionNumber(n)),s&&(s=this._parseVersionNumber(s)),l&&(l=this._parseVersionNumber(l)),this._hasVulnerableVersion(n,s,l,i))return t}return null}_hasVulnerableVersion(e,i,r,t){if(e&&i){if(t<e&&t>=i)return!0}else if(e&&r){if(t<e&&t>r)return!0}else{if(e&&t<e)return!0;if(i&&t>=i)return!0;if(r&&t>r)return!0}return!1}_parseVersionNumber(e){return e.split("-")[0].split(/[a-zA-Z]/)[0]}}export default VulnerableApplicationLibrary;