import{GATHER_SCRIPTS,CONTRAST__STORED_APP_LIBS,isEmptyObject}from"../util.js";import Library from"./Library.js";import VulnerableApplicationLibrary from"./VulnerableApplicationLibrary.js";class ApplicationLibrary{constructor(i,e){this.tab=i,this.application=e,this.libraries=[],this.STORED_APP_LIBS_ID="APP_LIBS__ID_"+e.domain}_setCurrentLibs(i){i&&Array.isArray(i)&&(this.libraries=i.filter(Boolean))}getApplicationLibraries(){return new Promise((i,e)=>{const{tab:r}=this;chrome.tabs.sendMessage(r.id,{action:GATHER_SCRIPTS,tab:r},t=>{if(!t)return void e(new Error("No Response to GATHER_SCRIPTS"));const{sharedLibraries:a}=t;let n;try{n=a.map(i=>new Library(r,i).createVersionedLibrary())}catch(i){return}Promise.all(n).then(e=>{const r=e.map(i=>{let e=new VulnerableApplicationLibrary(i);return i&&i.vulnerabilities&&i.version?e.highConfidenceVulnerability():e.lowConfidenceVulnerabilities()}).filter(Boolean);i(r)}).catch(i=>{})})})}addNewApplicationLibraries(i){return new Promise(async e=>{const{STORED_APP_LIBS_ID:r}=this,t=await this._getStoredApplicationLibraries(),a=t[CONTRAST__STORED_APP_LIBS]?t[CONTRAST__STORED_APP_LIBS][r]:null;if(this._setCurrentLibs(a),!t||isEmptyObject(t))t[CONTRAST__STORED_APP_LIBS]={},t[CONTRAST__STORED_APP_LIBS][r]=i;else if(!isEmptyObject(t[CONTRAST__STORED_APP_LIBS])&&a&&Array.isArray(a)){const n=this._dedupeLibs(i);if(0===n.length)return void e(null);const s=a.concat(n);t[CONTRAST__STORED_APP_LIBS][r]=s}else t[CONTRAST__STORED_APP_LIBS][r]=i;chrome.storage.local.set(t,function(){chrome.storage.local.get(CONTRAST__STORED_APP_LIBS,function(i){e(i[CONTRAST__STORED_APP_LIBS][r])})})})}_getStoredApplicationLibraries(){return new Promise((i,e)=>{chrome.storage.local.get(CONTRAST__STORED_APP_LIBS,r=>{!r||isEmptyObject(r)?i({}):i(r),e(new Error("Stored Libs are",typeof r))})})}_dedupeLibs(i){return i.filter(i=>{return!this.libraries.filter(e=>e.name===i.name&&i.vulnerabilitiesCount>1?e.vulnerabilities.length===i.vulnerabilities.length||(i.vulnerabilities=i.vulnerabilities.filter(i=>e.vulnerabilities.filter(e=>e.title!==i.title)),0===i.vulnerabilities.length):e.name===i.name)[0]})}removeAndSetupApplicationLibraries(){if(!this.application||!this.STORED_APP_LIBS_ID)throw new Error("Application and STORED_APP_LIBS_ID are not set.");return chrome.storage.local.remove(CONTRAST__STORED_APP_LIBS),this._setupApplicationLibraries()}async _setupApplicationLibraries(){const i=await this.getApplicationLibraries();return i&&0!==i.length?this.addNewApplicationLibraries(i):null}}export default ApplicationLibrary;