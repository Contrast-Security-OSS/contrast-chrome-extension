const CONTRAST_USERNAME="contrast_username",CONTRAST_SERVICE_KEY="contrast_service_key",CONTRAST_API_KEY="contrast_api_key",CONTRAST_ORG_UUID="contrast_org_uuid",TEAMSERVER_URL="teamserver_url",SEVERITY_NOTE="Note",SEVERITY_LOW="Low",SEVERITY_MEDIUM="Medium",SEVERITY_HIGH="High",SEVERITY_CRITICAL="Critical",SEVERITY={Note:0,Low:1,Medium:2,High:3,Critical:4},TEAMSERVER_INDEX_PATH_SUFFIX="/Contrast/static/ng/index.html#/",TEAMSERVER_ACCOUNT_PATH_SUFFIX="/account",TEAMSERVER_PROFILE_PATH_SUFFIX="/account/profile",TEAMSERVER_API_PATH_SUFFIX="/Contrast/api",VALID_TEAMSERVER_HOSTNAMES=["app.contrastsecurity.com","apptwo.contrastsecurity.com","eval.contratsecurity.com","alpha.contrastsecurity.com","localhost"],CONTRAST_GREEN="#65C0B2",CONTRAST_RED="#E63025",CONTRAST_YELLOW="#FFD300",CONTRAST_CONFIGURE_TEXT="*",LISTENING_ON_DOMAIN=["<all_urls>"],GATHER_FORMS_ACTION="contrast__gatherForms",GATHER_SCRIPTS="contrast__gather_scripts",STORED_TRACES_KEY="contrast__traces",TRACES_REQUEST="contrast__getStoredTraces",STORED_APPS_KEY="contrast__APPS",LOADING_DONE="contrast__LOADING_DONE_requests",HIGHLIGHT_VULNERABLE_FORMS="contrast__highlight_vuln_forms",APPLICATION_CONNECTED="contrast__application__connected",APPLICATION_DISCONNECTED="contrast__application__disconnected",CONNECTED_APP_DOMAINS="contrast__connected_app_domains",CONTRAST__STORED_APP_LIBS="contrast__stored_libraries",CONTRAST_WAPPALIZE="contrast__wappalzye",CONTRAST_INITIALIZE="contrast__initialize_user",CONTRAST_INITIALIZED="contrast__user_initialized",BLACKLISTED_DOMAINS=["chrome://","file://","/Contrast/api/ng/","/Contrast/s/","google.com","ajax.googleapis.com","gstatic.net","cloudfront.com","developer.chrome","facebook.com","atlassian.net","cloudfront.net","cloudfront.com","cdn.sstatic.net","reddit.com"],BLACKLIST_LENGTH=BLACKLISTED_DOMAINS.length,UUID_V4_REGEX=new RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i);function fetchTeamserver(t,e,r,n){const o=t+e,i={method:"GET",headers:new Headers({Authorization:r,"API-Key":n,Accept:"application/json"})};return fetch(o,i).then(t=>{if(200===t.status&&t.ok)return t.json();throw new Error(t)}).catch(t=>new Error(t))}function getAuthorizationHeader(t,e){return btoa(t+":"+e)}function getOrganizationVulnerabilitiesIdsUrl(t,e,r){if(t&&e&&r)return t+"/ng/"+e+"/traces/"+r+"/ids";if(t&&e)return t+"/ng/"+e+"/orgtraces/ids";throw new Error("an argument to getOrganizationVulnerabilitiesIdsUrl was undefined")}function getVulnerabilityShortUrl(t,e,r){if(t&&e&&r)return t+"/ng/"+e+"/orgtraces/"+r+"/short";throw new Error("an argument to getVulnerabilityShortUrl was undefined")}function getApplicationsUrl(t,e){if(t&&e)return t+"/ng/"+e+"/applications/name";throw new Error("an argument to getApplicationsUrl was undefined")}function getVulnerabilityTeamserverUrl(t,e,r){if(t&&e&&r){let n=t;return t.endsWith("/api")&&(n=t.substring(0,t.indexOf("/api"))),n+"/static/ng/index.html#/"+e+"/vulns/"+r+"/overview"}throw new Error("argument to getVulnerabilityTeamserverUrl was undefined")}function getStoredCredentials(){return new Promise((t,e)=>{chrome.storage.local.get([CONTRAST_USERNAME,CONTRAST_SERVICE_KEY,CONTRAST_API_KEY,CONTRAST_ORG_UUID,TEAMSERVER_URL],r=>{r?t(r):e(new Error("Error getting credentials"))})})}function getOrganizationVulnerabilityIds(t,e){return getStoredCredentials().then(r=>{if(!r)throw new Error("Error retrieving credentials from storage");const n=getOrganizationVulnerabilitiesIdsUrl(r[TEAMSERVER_URL],r[CONTRAST_ORG_UUID],e),o=getAuthorizationHeader(r[CONTRAST_USERNAME],r[CONTRAST_SERVICE_KEY]);return fetchTeamserver(n,"?urls="+t,o,r[CONTRAST_API_KEY])})}function getVulnerabilityShort(t){return getStoredCredentials().then(e=>{return fetchTeamserver(getVulnerabilityShortUrl(e[TEAMSERVER_URL],e[CONTRAST_ORG_UUID],t),"",getAuthorizationHeader(e[CONTRAST_USERNAME],e[CONTRAST_SERVICE_KEY]),e[CONTRAST_API_KEY])})}function getOrgApplications(){return getStoredCredentials().then(t=>{return fetchTeamserver(getApplicationsUrl(t[TEAMSERVER_URL],t[CONTRAST_ORG_UUID]),"",getAuthorizationHeader(t[CONTRAST_USERNAME],t[CONTRAST_SERVICE_KEY]),t[CONTRAST_API_KEY])})}function isCredentialed(t){const e=Object.values(t);return!!e&&e.length>0&&e.every(t=>!!t)}function deDupeArray(t){return t.filter((t,e,r)=>r.indexOf(t)===e)}function getHostFromUrl(t){const e=t.host.replace(":","_"),r=e.split(".");return r.length<3?r[0]:3===r.length?r[1]:e}function isBlacklisted(t){if("string"!=typeof t)throw new Error("url must be a string");if(!t)return!0;t=t.toLowerCase();for(let e=0;e<BLACKLIST_LENGTH;e++)if(t.includes(BLACKLISTED_DOMAINS[e].toLowerCase()))return!0;return!1}function isContrastTeamserver(t){if("string"!=typeof t)throw new Error("url must be a string");if(!t)return!1;return["/Contrast/api/ng/","/Contrast/s/","/Contrast/static/ng/index"].some(e=>t.includes(e))}function updateTabBadge(t,e="",r=CONTRAST_GREEN){if(t)try{chrome.tabs.get(t.id,n=>{if(n)try{chrome.browserAction.getBadgeText({tabId:t.id},n=>{(""===n||n)&&t.index>=0&&!chrome.runtime.lastError&&(chrome.browserAction.setBadgeBackgroundColor({color:r}),chrome.browserAction.setBadgeText({tabId:t.id,text:e}))})}catch(t){throw new Error("Error updating badge")}})}catch(t){throw new Error("Error updating badge")}}function removeLoadingBadge(t){t&&chrome.browserAction.getBadgeText({tabId:t.id},e=>{"↻"===e&&chrome.browserAction.getBadgeBackgroundColor({tabId:t.id},e=>{updateTabBadge(t,"",e||CONTRAST_GREEN)})})}function generateTraceURLString(t){if(!t||0===t.length)return"";const e=new URL(document.URL).origin;let r=t.map(t=>e&&"null"!==e?e+"/"+t:t);return t.concat(r).map(t=>[btoa(t),btoa(new URL(t).pathname)]).flatten().join(",")}function processTeamserverUrl(t){if(t.length>0){for(;t.endsWith("/");)t=t.slice(0,-1);t.endsWith("/api")||(t.endsWith("/Contrast")||(t+="/Contrast"),t+="/api"),t.startsWith("http")||(t="https://"+t)}return t}function setElementDisplay(t,e){if(!t||!e)throw new Error("Either no element or display received when setting display");try{t.style.display=e}catch(t){throw new Error(t)}}function setElementText(t,e){if(!t||"string"!=typeof e)throw new Error("Either no element or text received when setting element text");try{t.innerText=e}catch(t){throw new Error(t)}}function changeElementVisibility(t){Array.prototype.slice.call(t.classList).includes("visible")?(t.classList.remove("visible"),t.classList.add("hidden")):(t.classList.add("visible"),t.classList.remove("hidden"))}function hideElementAfterTimeout(t,e=(()=>null)){setTimeout(()=>(changeElementVisibility(t),e()),2e3)}function loadingBadge(t){updateTabBadge(t,"↻",CONTRAST_GREEN)}Array.prototype.flatten=function(){return this.reduce((t,e)=>t.concat(e),[])},String.prototype.titleize=function(){return this.replace(/\b([a-z])/g,function(t){return t.charAt(0).toUpperCase()+t.substr(1).toLowerCase()})};const CONTRAST_ICONS={0:"contrast-on.png",1:"contrast-off.png",2:"contrast-not-configured.png"};function updateExtensionIcon(t,e=0){const r={tabId:t.id,path:"/img/"+("number"==typeof e?CONTRAST_ICONS[e]:e)};if(!r.path)throw new Error("update extension icon path is not set",r);chrome.browserAction.setIcon(r)}function retrieveApplicationFromStorage(t){return new Promise((e,r)=>{chrome.storage.local.get(STORED_APPS_KEY,n=>{chrome.runtime.lastError&&r(new Error("Error retrieving stored applications")),n&&n[STORED_APPS_KEY]||(n={[STORED_APPS_KEY]:[]});const o=getHostFromUrl(new URL(t.url)),i=n[STORED_APPS_KEY].filter(t=>t.host===o)[0];if(i)e(i);else{if(isBlacklisted(t.url)||chrome.runtime.lastError){if(isBlacklisted(t.url)&&!chrome.runtime.lastError)try{updateExtensionIcon(t,1),updateTabBadge(t,"",CONTRAST_GREEN)}catch(t){r(new Error("Error updating tab badge"))}}else try{updateExtensionIcon(t,1),updateTabBadge(t,"")}catch(t){r(new Error("Error updating tab badge"))}e(null)}})})}